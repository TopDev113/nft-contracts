name: Foundry Tests

on:
  push:
    branches:
      - master
  pull_request:

env:
  FOUNDRY_PROFILE: ci

jobs:
  foundry:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'

      - name: Cache npm dependencies
        id: cache-npm-deps
        uses: actions/cache@v2
        with:
          # we cache node_modules directly, it may have downsides, but much faster
          # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/#fn1
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-npm-deps.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: forge-test

  hardhat:
    strategy:
      fail-fast: true

    name: Hardhat project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Node 16
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'

      - name: Cache npm dependencies
        id: cache-npm-deps
        uses: actions/cache@v2
        with:
          # we cache node_modules directly, it may have downsides, but much faster
          # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/#fn1
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-npm-deps.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Run Hardhat tests
        run: |
          npm run test
        id: hardhat-test
