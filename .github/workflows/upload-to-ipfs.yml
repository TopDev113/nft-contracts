name: Upload Builds to IPFS

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request events but only for the main branch
  push:
    branches:
      - main
      - core-*
  pull_request:
    branches:
      - main
      - core-*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job
  upload-to-ipfs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Cache npm dependencies
        id: cache-npm-deps
        uses: actions/cache@v3
        with:
          # we cache node_modules directly, it may have downsides, but much faster
          # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/#fn1
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-npm-deps.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Build changed contracts and upload to IPFS
        # find files that have changed in contracts/**/*.sol
        # and run hh upload $file for them
        id: build-ipfs
        run: git diff --name-only origin/main | grep contracts | grep .sol | xargs -I {} hh upload {}

      - name: Post IPFS links
        uses: LouisBrunner/checks-action@v1.1.1
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: IPFS Builds Uploads
          conclusion: ${{ job.status }}
          details_url: ${{ steps.build-ipfs.outputs.stdout }}
          output: |
            {"summary":${{ steps.build-ipfs.outputs.stdout }}}

      - name: Post IPFS links
        uses: actions/github-script@v6.3.3
        with:
          # comment on current pull request using Github API
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `IPFS build:

              ${{steps.build-ipfs.outputs.result}}`
            })
